// <auto-generated />
using System;
using FirmaERDCF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirmaERDCF.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230615151859_New")]
    partial class New
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirmaERDCF.Ametinimetused", b =>
                {
                    b.Property<Guid>("AmetinimetuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ametinimetus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AmetisAl")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AmetisKuni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Osakond")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtseseÜlemuseEesnimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OtseseÜlemuseKontakttel")
                        .HasColumnType("int");

                    b.Property<string>("OtseseÜlemusePerenimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtsesÜlemuseEpost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AmetinimetuseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Ametinimetused");
                });

            modelBuilder.Entity("FirmaERDCF.Firma", b =>
                {
                    b.Property<Guid>("FirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaRegNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Koduleht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Kontaktisik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lühinimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirmaId");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("FirmaERDCF.Haiguslehed", b =>
                {
                    b.Property<Guid>("HaigusleheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AegunudHaigusepäevi")
                        .HasColumnType("int");

                    b.Property<int>("AllesolevaidHaigusepäevi")
                        .HasColumnType("int");

                    b.Property<DateTime>("HaigusleheAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HaigusleheLõpp")
                        .HasColumnType("datetime2");

                    b.Property<int>("HaiguspäeviKokku")
                        .HasColumnType("int");

                    b.Property<int>("Kasutatudhaigusepäevi")
                        .HasColumnType("int");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ÕigusHaiguslehele")
                        .HasColumnType("bit");

                    b.HasKey("HaigusleheId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Haiguslehed");
                });

            modelBuilder.Entity("FirmaERDCF.Harukontor", b =>
                {
                    b.Property<Guid>("HaruKontoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HarukontoriRegNr")
                        .HasColumnType("int");

                    b.Property<string>("Koduleht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Kontaktisik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lühinimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HaruKontoriId");

                    b.HasIndex("FirmaId");

                    b.ToTable("Harukontor");
                });

            modelBuilder.Entity("FirmaERDCF.Laenutus", b =>
                {
                    b.Property<Guid>("LaenutuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EsemeNimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LaenutuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LaenutuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LaenutuseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Laenutus");
                });

            modelBuilder.Entity("FirmaERDCF.Lapsed", b =>
                {
                    b.Property<Guid>("LapseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LapseEesnimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LapsePerenimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LapseSünniaeg")
                        .HasColumnType("datetime2");

                    b.Property<int>("LapseVanus")
                        .HasColumnType("int");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LapseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Lapsed");
                });

            modelBuilder.Entity("FirmaERDCF.Ligipääsuload", b =>
                {
                    b.Property<Guid>("LigipääsuloaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LigipääsuLõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("LigipääsuTase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LigipääsuÕigus")
                        .HasColumnType("bit");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ligipääsuAlgus")
                        .HasColumnType("datetime2");

                    b.HasKey("LigipääsuloaId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Ligipääsuload");
                });

            modelBuilder.Entity("FirmaERDCF.Puhkused", b =>
                {
                    b.Property<Guid>("PuhkuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AegunudPuhkusePäevad")
                        .HasColumnType("int");

                    b.Property<int>("AllesolevadPäevad")
                        .HasColumnType("int");

                    b.Property<int>("KasutatudPäevad")
                        .HasColumnType("int");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PuhkuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PuhkuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<int>("PuhkusePäevi")
                        .HasColumnType("int");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PuhkuseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Puhkused");
                });

            modelBuilder.Entity("FirmaERDCF.Tervisekontroll", b =>
                {
                    b.Property<Guid>("TerviseKontrolliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EelmiseTerviseKontrolliKp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TerviseKontrolliVajadus")
                        .HasColumnType("bit");

                    b.Property<Guid>("TöötajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UueTerviseKontrolliKp")
                        .HasColumnType("datetime2");

                    b.HasKey("TerviseKontrolliId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Tervisekontroll");
                });

            modelBuilder.Entity("FirmaERDCF.Töötaja", b =>
                {
                    b.Property<Guid>("TöötajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Eesnimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HarukontoriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Isikukood")
                        .HasColumnType("int");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktAadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Perenimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TöölAl")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TöölKuni")
                        .HasColumnType("datetime2");

                    b.HasKey("TöötajaId");

                    b.HasIndex("HarukontoriId");

                    b.ToTable("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Ametinimetused", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Ametinimetuse")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Haiguslehed", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Haigusleheds")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Harukontor", b =>
                {
                    b.HasOne("FirmaERDCF.Firma", "Firma")
                        .WithMany("Harukontors")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("FirmaERDCF.Laenutus", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Laenutus")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Lapsed", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Lapseds")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Ligipääsuload", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Ligipääsuloads")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Puhkused", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Puhkuseds")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Tervisekontroll", b =>
                {
                    b.HasOne("FirmaERDCF.Töötaja", "Töötaja")
                        .WithMany("Tervisekontrolls")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FirmaERDCF.Töötaja", b =>
                {
                    b.HasOne("FirmaERDCF.Harukontor", "Harukontori")
                        .WithMany("Töötajas")
                        .HasForeignKey("HarukontoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Harukontori");
                });

            modelBuilder.Entity("FirmaERDCF.Firma", b =>
                {
                    b.Navigation("Harukontors");
                });

            modelBuilder.Entity("FirmaERDCF.Harukontor", b =>
                {
                    b.Navigation("Töötajas");
                });

            modelBuilder.Entity("FirmaERDCF.Töötaja", b =>
                {
                    b.Navigation("Ametinimetuse");

                    b.Navigation("Haigusleheds");

                    b.Navigation("Laenutus");

                    b.Navigation("Lapseds");

                    b.Navigation("Ligipääsuloads");

                    b.Navigation("Puhkuseds");

                    b.Navigation("Tervisekontrolls");
                });
#pragma warning restore 612, 618
        }
    }
}
